Blockly.Msg["PGZ__OPTIONAL CALLBACK NAME"] = "* Optional callback name";
Blockly.Msg["PGZ__WHEN FINISHED EXECUTE THIS CODE"] = "* When finished, execute this code";
Blockly.Msg["PGZ_ACTOR"] = "Actor";
Blockly.Msg["PGZ_ADD A NEW GAME ACTOR"] = "Add a new game actor";
Blockly.Msg["PGZ_ANIMATE OBJECT"] = "Animate object";
Blockly.Msg["PGZ_ANIMATE THE ACTOR BY UPDATING ITS PROPERTIES PROGRESSIVELY"] = "Animate the actor by updating its properties progressively";
Blockly.Msg["PGZ_CANCEL SCHEDULED CALLBACK"] = "Cancel scheduled callback";
Blockly.Msg["PGZ_CANCEL THE GIVEN CALLBACK"] = "Cancel the given callback";
Blockly.Msg["PGZ_CHANGE THE ACTOR TO ANOTHER IMAGE"] = "Change the actor to another image";
Blockly.Msg["PGZ_CLEAR THE SCREEN"] = "Clear the screen";
Blockly.Msg["PGZ_CREATE A RECTANGLE"] = "Create a rectangle";
Blockly.Msg["PGZ_CREATE A RECTANGULAR SURFACE FOR USE IN PYGAME"] = "Create a rectangular surface for use in Pygame";
Blockly.Msg["PGZ_DEFINE A NEW ACTOR IN THE GAME"] = "Define a new actor in the game";
Blockly.Msg["PGZ_DEFINES A POSITION TARGET FOR ANIMATION"] = "Defines a position target for animation";
Blockly.Msg["PGZ_DRAW LOOP"] = "Draw Loop";
Blockly.Msg["PGZ_DRAW A LINE FROM"] = "Draw a line from";
Blockly.Msg["PGZ_DRAW A(N)"] = "Draw a(n)";
Blockly.Msg["PGZ_DRAW ACTOR"] = "Draw actor";
Blockly.Msg["PGZ_DRAW IMAGE"] = "Draw image";
Blockly.Msg["PGZ_DRAW TEXT"] = "Draw text";
Blockly.Msg["PGZ_DRAW THE ACTOR ON THE SCREEN AT ITS SET POSITION"] = "Draw the actor on the screen at its set position";
Blockly.Msg["PGZ_DRAWS A CIRCLE ON THE SCREEN"] = "Draws a circle on the screen";
Blockly.Msg["PGZ_DRAWS A LINE ON THE SCREEN"] = "Draws a line on the screen";
Blockly.Msg["PGZ_DRAWS A RECTANGLE ON THE SCREEN"] = "Draws a rectangle on the screen";
Blockly.Msg["PGZ_DRAWS THE GIVEN IMAGE FILE ON THE SCREEN"] = "Draws the given image file on the screen";
Blockly.Msg["PGZ_DRAWS THE GIVEN TEXT ON THE SCREEN USING FORMATTING"] = "Draws the given text on the screen using formatting";
Blockly.Msg["PGZ_EXECUTE THE GIVEN CODE AFTER THE GIVEN DELAY (ONCE OR UNTIL CANCELLED)"] = "Execute the given code after the given delay (once or until cancelled)";
Blockly.Msg["PGZ_EXECUTE THE GIVEN CODE AT THE GIVEN INTERVAL"] = "Execute the given code at the given interval";
Blockly.Msg["PGZ_EXECUTES CODE WHEN A FINGER IS DRAGGED ACROSS THE TOUCHSCREEN"] = "Executes code when a finger is dragged across the touchscreen";
Blockly.Msg["PGZ_EXECUTES CODE WHEN THE TOUCHSCREEN IS PRESSED OR RELEASED"] = "Executes code when the touchscreen is pressed or released";
Blockly.Msg["PGZ_FILL SCREEN WITH"] = "Fill screen with";
Blockly.Msg["PGZ_FILL THE SCREEN WITH THE GIVEN COLOR"] = "Fill the screen with the given color";
Blockly.Msg["PGZ_FONT BACKGROUND COLOR"] = "Font background color";
Blockly.Msg["PGZ_FONT COLOR"] = "Font color";
Blockly.Msg["PGZ_FONT NAME"] = "Font name";
Blockly.Msg["PGZ_FONT SIZE"] = "Font size";
Blockly.Msg["PGZ_GET A COORDINATE PROPERTY VALUE FROM THE LAST TOUCH (INSIDE A TOUCHSCREEN EVENT HANDLER ONLY !)"] = "Get a coordinate property value from the last touch (inside a touchscreen event handler only !)";
Blockly.Msg["PGZ_GET A PROPERTY VALUE FROM AN ACTOR"] = "Get a property value from an actor";
Blockly.Msg["PGZ_GET DRAG DISTANCE"] = "Get drag distance";
Blockly.Msg["PGZ_GET THE"] = "Get the";
Blockly.Msg["PGZ_GET TOUCH POSITION"] = "Get touch position";
Blockly.Msg["PGZ_HEIGHT"] = "Height";
Blockly.Msg["PGZ_MAIN PYGAMEZERO DRAW LOOP"] = "Main Pygamezero Draw loop";
Blockly.Msg["PGZ_MAIN PYGAMEZERO UPDATE LOOP"] = "Main Pygamezero Update Loop";
Blockly.Msg["PGZ_MOVE ACTOR"] = "Move actor";
Blockly.Msg["PGZ_MOVE THE CHARACTER TO A GIVEN POSITION USING A TUPLE"] = "Move the character to a given position using a tuple";
Blockly.Msg["PGZ_MOVE THE CHARACTER TO A GIVEN POSITION"] = "Move the character to a given position";
Blockly.Msg["PGZ_POSITION"] = "Position";
Blockly.Msg["PGZ_REMOVES EVERYTHING OFF THE SCREEN"] = "Removes everything off the screen";
Blockly.Msg["PGZ_RETURNS THE RELATIVE DISTANCE OF THE DRAG EVENT"] = "Returns the relative distance of the drag event (inside a drag event handler only !)";
Blockly.Msg["PGZ_RETURNS THE TOUCH POSITION"] = "Returns the touch position (inside a touchscreen event handler only !)";
Blockly.Msg["PGZ_RETURNS TRUE IF THE ACTOR IS COLLIDING WITH THE GIVEN POSITION"] = "Returns true if the actor is colliding with the given position";
Blockly.Msg["PGZ_RETURNS TRUE IF THE ACTOR IS COLLIDING WITH THE GIVEN RECTANGLE"] = "Returns true if the actor is colliding with the given rectangle (can be another actor)";
Blockly.Msg["PGZ_SCHEDULE"] = "Schedule";
Blockly.Msg["PGZ_SET THE SCREEN'S WIDTH"] = "Set the screen's width";
Blockly.Msg["PGZ_SETS A SHADOW UNDER THE TEXT WITH THE GIVEN OFFSET"] = "Sets a Shadow under the text with the given offset";
Blockly.Msg["PGZ_SETS THE ALIGNMENT OF THE TEXT"] = "Sets the Alignment of the text";
Blockly.Msg["PGZ_SETS THE FONT BACKGROUND COLOR OF THE TEXT"] = "Sets the Font Background Color of the text";
Blockly.Msg["PGZ_SETS THE FONT COLOR OF THE TEXT"] = "Sets the Font Color of the text";
Blockly.Msg["PGZ_SETS THE FONT NAME OF THE TEXT"] = "Sets the Font Name of the text";
Blockly.Msg["PGZ_SETS THE FONT SIZE OF THE TEXT"] = "Sets the Font Size of the text";
Blockly.Msg["PGZ_SETS THE ROTATION ANGLE OF THE TEXT"] = "Sets the Rotation Angle of the text";
Blockly.Msg["PGZ_SETS THE SCREEN WIDTH AND HEIGHT"] = "Sets the screen width and height";
Blockly.Msg["PGZ_TEXT ROTATION ANGLE"] = "Text Rotation Angle";
Blockly.Msg["PGZ_TEXT ALIGNED TO THE "] = "Text aligned to the ";
Blockly.Msg["PGZ_TEXT POSITION ANCHORED BY ITS"] = "Text position anchored by its";
Blockly.Msg["PGZ_TEXT SHADOW OFFSET BY "] = "Text shadow offset by ";
Blockly.Msg["PGZ_UPDATE LOOP"] = "Update Loop";
Blockly.Msg["PGZ_UPDATE ACTOR"] = "Update actor";
Blockly.Msg["PGZ_WHEN THE TOUCH SCREEN IS "] = "When the touch screen is ";
Blockly.Msg["PGZ_WHEN THE TOUCH SCREEN IS DRAGGED"] = "When the touch screen is dragged";
Blockly.Msg["PGZ_WIDTH"] = "Width";
Blockly.Msg["PGZ_X COORDINATE"] = "X coordinate";
Blockly.Msg["PGZ_Y COORDINATE"] = "Y coordinate";
Blockly.Msg["PGZ_X"] = "X";
Blockly.Msg["PGZ_Y"] = "Y";
Blockly.Msg["PGZ_ANCHORED BY ITS"] = "anchored by its";
Blockly.Msg["PGZ_AND A RADIUS OF"] = "and a radius of";
Blockly.Msg["PGZ_AND HEIGHT"] = "and height";
Blockly.Msg["PGZ_AT X"] = "at X";
Blockly.Msg["PGZ_AT POSITION X"] = "at position X";
Blockly.Msg["PGZ_CIRCLE AT"] = "circle at";
Blockly.Msg["PGZ_COLLIDING WITH POSITION"] = "colliding with position";
Blockly.Msg["PGZ_COLLIDING WITH RECTANGLE OR ACTOR"] = "colliding with rectangle or actor";
Blockly.Msg["PGZ_DURING"] = "during";
Blockly.Msg["PGZ_EMPTY"] = "empty";
Blockly.Msg["PGZ_FILLED"] = "filled";
Blockly.Msg["PGZ_EVERY"] = "every";
Blockly.Msg["PGZ_FORMATTED AS"] = "formatted as";
Blockly.Msg["PGZ_IN COLOR"] = "in color";
Blockly.Msg["PGZ_IN"] = "in";
Blockly.Msg["PGZ_LEFT"] = "left";
Blockly.Msg["PGZ_CENTER"] = "center";
Blockly.Msg["PGZ_RIGHT"] = "right";
Blockly.Msg["PGZ_LINEAR"] = "linear";
Blockly.Msg["PGZ_ACCELERATE"] = "accelerate";
Blockly.Msg["PGZ_DECELERATE"] = "decelerate";
Blockly.Msg["PGZ_ACCELERATE THEN DECELERATE"] = "accelerate then decelerate";
Blockly.Msg["PGZ_ELASTIC AT THE END"] = "elastic at the end";
Blockly.Msg["PGZ_ELASTIC AT THE START"] = "elastic at the start";
Blockly.Msg["PGZ_ELASTIC AT START AND END"] = "elastic at start and end";
Blockly.Msg["PGZ_BOUNCE AT THE END"] = "bounce at the end";
Blockly.Msg["PGZ_BOUNCE AT THE START"] = "bounce at the start";
Blockly.Msg["PGZ_BOUNCE AT THE START AND END"] = "bounce at the start and end";
Blockly.Msg["PGZ_OF THE TOUCH POSITION"] = "of the touch position";
Blockly.Msg["PGZ_ON THE SCREEN AT POSITION"] = "on the screen at position";
Blockly.Msg["PGZ_ONCE"] = "once";
Blockly.Msg["PGZ_FOREVER"] = "forever";
Blockly.Msg["PGZ_POSITION OF ACTOR"] = "position of actor";
Blockly.Msg["PGZ_PRESSED"] = "pressed";
Blockly.Msg["PGZ_RELEASED"] = "released";
Blockly.Msg["PGZ_RECTANGLE "] = "rectangle ";
Blockly.Msg["PGZ_SECOND(S)"] = "second(s)";
Blockly.Msg["PGZ_SECONDS"] = "seconds";
Blockly.Msg["PGZ_TO POSITION X"] = "to position X";
Blockly.Msg["PGZ_TO POSITION TUPLE"] = "to position tuple";
Blockly.Msg["PGZ_TO"] = "to";
Blockly.Msg["PGZ_TOP LEFT"] = "top left";
Blockly.Msg["PGZ_CENTER"] = "center";
Blockly.Msg["PGZ_MIDDLE TOP"] = "middle top";
Blockly.Msg["PGZ_TOP RIGHT"] = "top right";
Blockly.Msg["PGZ_MIDDLE LEFT"] = "middle left";
Blockly.Msg["PGZ_MIDDLE RIGHT"] = "middle right";
Blockly.Msg["PGZ_BOTTOM LEFT"] = "bottom left";
Blockly.Msg["PGZ_MIDDLE BOTTOM"] = "middle bottom";
Blockly.Msg["PGZ_BOTTOM RIGHT"] = "bottom right";
Blockly.Msg["PGZ_TOP LEFT"] = "top left";
Blockly.Msg["PGZ_CENTER"] = "center";
Blockly.Msg["PGZ_MIDDLE TOP"] = "middle top";
Blockly.Msg["PGZ_TOP RIGHT"] = "top right";
Blockly.Msg["PGZ_MIDDLE LEFT"] = "middle left";
Blockly.Msg["PGZ_MIDDLE RIGHT"] = "middle right";
Blockly.Msg["PGZ_BOTTOM LEFT"] = "bottom left";
Blockly.Msg["PGZ_MIDDLE BOTTOM"] = "middle bottom";
Blockly.Msg["PGZ_BOTTOM RIGHT"] = "bottom right";
Blockly.Msg["PGZ_USING TWEENING MODE"] = "using tweening mode";
Blockly.Msg["PGZ_WITH IMAGE"] = "with image";
